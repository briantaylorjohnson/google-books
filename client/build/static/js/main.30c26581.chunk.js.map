{"version":3,"sources":["components/Nav/Nav.js","components/Jumbotron/Jumbotron.js","utils/API.js","components/Search/ResultListing.js","components/Search/Results.js","components/Search/Search.js","components/Books/Books.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Jumbotron","bookSearch","bookTitle","axios","get","saveBook","bookDetails","post","getBooks","deleteBook","bookId","ResultListing","props","handleSaveBook","b","setState","save","title","authors","link","image","description","preventDefault","API","then","res","console","log","catch","err","handleDeleteBook","deleted","state","saved","delete","bind","src","this","alt","length","map","author","index","key","target","rel","page","onClick","React","Component","Results","bookData","book","canonicalVolumeLink","_id","volumeInfo","imageLinks","smallThumbnail","Search","searchTitleChange","searchButtonClick","c","value","s","data","aria-describedby","placeholder","onChange","Books","savedBooks","updated","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30c26581.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Nav.css\";\n\n// Creates Nav component for heading and links to pages\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n          Google Books\n      </a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <a className=\"nav-item nav-link active\" href=\"/search\">Search <span className=\"sr-only\">(current)</span></a>\n          <a className=\"nav-item nav-link\" href=\"/books\">Saved</a>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Exports Nav component\nexport default Nav;","import React from \"react\";\nimport \"./Jumbotron.css\";\n\n// Creates Nav component for heading and links to pages\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n            <h1 className=\"display-4\">(React) Google Books Search</h1>\n            <p className=\"lead\">Welcome! Here you can search for and save books of interest.</p>\n        </div>\n    </div>\n  );\n}\n\n// Exports Nav component\nexport default Jumbotron;","import axios from \"axios\"\n\nexport default\n{\n    bookSearch: (bookTitle) => { return axios.get(\"/api/book_search/\" + bookTitle)},\n\n    saveBook: (bookDetails) => { return axios.post(\"/api/save_book\", bookDetails)},\n\n    getBooks: () => {return axios.get(\"/api/get_books\")},\n\n    deleteBook: (bookId) => { return axios.post(\"/api/delete_book/\" + bookId)}\n}","import React from \"react\";\nimport \"./Results.css\";\nimport API from \"../../utils/API\";\n\nclass ResultListing extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state =\n        {\n            saved: false,\n            delete: false\n        }\n\n       this.handleSaveBook = this.handleSaveBook.bind(this);\n       this.handleDeleteBook = this.handleDeleteBook.bind(this);\n    }\n\n    handleSaveBook = (b) =>\n    {\n        this.setState({save: true});\n\n        const bookDetails = \n        {\n            title: this.props.title,\n            authors: this.props.authors,\n            link: this.props.link,\n            image: this.props.image,\n            description: this.props.description\n        }\n\n        b.preventDefault();\n\n        API.saveBook(bookDetails)\n        .then(\n            (res) =>\n            {\n                console.log(res);\n            }\n        ).catch( (err) =>\n        {\n            console.log(err)\n        });\n    }\n\n    handleDeleteBook = (b) =>\n    {\n        this.setState({deleted: true});\n\n        const bookId = this.props.id;\n\n        b.preventDefault();\n\n        API.deleteBook(bookId)\n        .then(\n            (res) =>\n            {\n                console.log(res);\n                \n            }\n        ).catch( (err) =>\n        {\n            console.log(err)\n        });\n    }\n\n    render()\n    {\n        return (\n            <div className=\"result-listing mb-2 pl-3 pr-3 pt-2 pb-2\">\n                <div className=\"row\">\n                    <div className=\"col-md-2 pt-2 pb-2\">\n                        <img src={this.props.image} alt={this.props.title}></img>\n                    </div>\n                    <div className=\"col-md-10\">\n                        <span className=\"book-title\">{this.props.title}<br /></span>\n                        <span className=\"book-author\">\n                        {\n                            (this.props.authors.length > 1)? this.props.authors.map((author, index) => <span key={index}>{author} - </span>) : this.props.authors.map((author, index) => <span key={index}>{author}</span>)\n                        }\n                        <br />\n                        </span>\n                        <span>{this.props.description}<br /></span>\n                        <a className=\"mt-3 mr-1\" href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"btn btn-sm btn-success\">View</button></a>\n                        \n                        {!(this.props.page === \"search\")? \n                            null : <button className=\"btn btn-sm btn-success mt-3 mb-3 ml-1\" onClick={this.handleSaveBook}>Save</button>\n                        }\n\n                        {!(this.props.page === \"books\")?\n                            null : <button className=\"btn btn-sm btn-danger mt-3 mb-3 ml-1\" onClick={this.handleDeleteBook}>Delete</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ResultListing;","import React from \"react\";\nimport \"./Results.css\";\nimport ResultListing from \"./ResultListing\"\n\nexport function Results(props)\n{\n  return (\n    <div className=\"search-results-listings\">\n    {\n      !(props.page === \"search\")?\n        \n        props.bookData.map((book) =>\n        {\n          const bookDetails = book;\n\n          console.log(\"Saved: \" + bookDetails)\n\n          return (\n              <ResultListing\n                  title={bookDetails.title}\n                  authors={bookDetails.authors}\n                  description={bookDetails.description}\n                  link={bookDetails.canonicalVolumeLink}\n                  image={bookDetails.image}\n                  key={bookDetails._id}\n                  id={bookDetails._id}\n                  page={props.page}\n                />\n          )\n        }\n        )\n        :\n        props.bookData.map((book) =>\n        {\n          const bookDetails = book.volumeInfo;\n          \n          console.log(\"Searched: \" + bookDetails)\n          return (\n            <ResultListing\n              title={bookDetails.title}\n              authors={bookDetails.authors}\n              description={bookDetails.description}\n              link={bookDetails.canonicalVolumeLink}\n              image={bookDetails.imageLinks.smallThumbnail}\n              key={book.id}\n              id={book.id}\n              page={props.page}\n            />\n          )\n        })\n    }\n    </div>\n  );\n}\n\n\n","import React from \"react\";\nimport \"./Search.css\";\nimport {Results} from \"./Results\"\nimport API from \"../../utils/API\";\n\n// Creates Search component for heading and links to pages\nclass Search extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state =\n    {\n      bookTitle: \"\",\n      bookData: [],\n      page: \"search\"\n    }\n    this.searchTitleChange = this.searchTitleChange.bind(this);\n    this.searchButtonClick = this.searchButtonClick.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.page);\n  }\n\n  searchTitleChange(c)\n  {\n    c.preventDefault();\n    this.setState({bookTitle: c.target.value});\n  }\n\n  searchButtonClick(s)\n  {\n    s.preventDefault();\n    \n    API.bookSearch(this.state.bookTitle)\n    .then( (data) =>\n    {\n      this.setState({bookData: data.data});\n      this.setState({bookTitle: \"\"});\n      console.log(this.state.bookData);\n    })\n  }\n\n  render()\n  {\n    return (\n      <div className=\"main-content-rail\">\n        <div className=\"container book-search pl-3 pt-3 pr-3 pb-3\">\n          <h5>Book Search</h5>\n          <form>\n            <div className=\"form-group\">\n              <label>Book Title</label>\n              <input type=\"text\" className=\"form-control\" id=\"input-text-book-title\" aria-describedby=\"bookTitleSearch\" placeholder=\"Enter title\" onChange={(c) => this.searchTitleChange(c)}></input>\n              <small id=\"bookTitleSearchHelp\" className=\"form-text text-muted\">Enter a book title and click the search button to see what's out there!</small>\n            </div>\n            <button type=\"submit\" className=\"btn btn-sm btn-success\" onClick={(s) => this.searchButtonClick(s)}>Search</button>\n          </form>\n        </div>\n        <div className=\"container book-search-results pl-3 pt-3 pr-3 pb-3 mt-3\">\n          <h5>Search Results</h5>\n          {(this.state.bookData.length > 0)?\n                <Results\n                  bookData={this.state.bookData}\n                  page={this.state.page}\n                /> : \"No Search Results\"\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport {Search};","import React from \"react\";\nimport \"./Books.css\";\nimport {Results} from \"../Search/Results\"\nimport API from \"../../utils/API\";\n\n// Creates Nav component for heading and links to pages\nclass Books extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state =\n    {\n      bookTitle: \"\",\n      savedBooks: [],\n      page: \"books\",\n      updated: false\n    }\n  }\n\n  componentDidMount()\n  {\n    this.getBooks();\n  }\n\n  getBooks = () =>\n  {\n    API.getBooks().then((res) => \n    {\n      console.log(res.data);\n      this.setState({savedBooks: res.data});\n      console.log(this.state.savedBooks);\n    }).catch((err) => console.log(err));\n    \n  }\n\n  render()\n  {\n    return (\n      <div className=\"container book-search-results pl-3 pt-3 pr-3 pb-3 mt-3\">\n            <h5>Saved Books</h5>\n              <Results \n                bookData={this.state.savedBooks}\n                page={this.state.page}\n              />\n      </div>\n    );\n  }\n}\n\n// Exports Nav component\nexport default Books;","import React, { Component } from \"react\";\nimport Nav from \"./components/Nav\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport {Search} from \"./components/Search\"\nimport Books from \"./components/Books\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component\n{\n  render()\n  {\n    return (\n      <div>\n        <div className=\"container\">\n\n          {/* Navigation */}\n          <Nav />\n\n          {/* Jumbotron */}\n          <Jumbotron />\n\n          {/* Main Content */}\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Search} />\n              <Route path=\"/search\" component={Search} />\n              <Route path=\"/books\" component={Books} />\n            </Switch>\n          </Router>\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}